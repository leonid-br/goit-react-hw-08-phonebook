{"version":3,"sources":["components/RegisterForm/RegisterForm.module.css","components/LoginForm/LoginForm.module.css","components/ContactForm/ContactForm.module.css","components/WelcomePage/WelcomePage.module.css","components/Heading/Heading.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","redux/phonebook-actions.js","redux/phonebook-reducer.js","redux/auth-operations.js","redux/auth-slice.js","redux/store.js","redux/phonebook-operation.js","redux/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Heading/Heading.js","components/Notification/Notification.js","components/WelcomePage/WelcomePage.js","components/RegisterForm/RegisterForm.js","components/LoginForm/LoginForm.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","components/App.js","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","findContact","items","createReducer","_","payload","state","filter","id","isLoading","onError","combineReducers","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","message","login","useHistory","push","console","log","logout","fetchCurrentUser","thunkAPI","getState","persistedToken","auth","get","authSlice","createSlice","name","initialState","user","email","isLoggedIn","error","extraReducers","fulfilled","action","rejected","pending","alert","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactReducer","devTools","process","persistor","persistStore","getContacts","dispatch","getItems","getAllContacts","isLoggedInGet","getName","ContactForm","useState","number","formData","setFormData","useDispatch","useSelector","handelChange","e","target","value","onSubmit","preventDefault","normalizeName","toLowerCase","find","changeEnterName","toUpperCase","contact","then","catch","className","style","form","lable","type","onChange","pattern","title","required","input","placeholder","button","Filter","label","ContactItem","item","onClick","delete","deleteContactById","porpTypes","PropTypes","arrayOf","object","string","ContactList","normalizedFilter","findContacts","includes","length","getUserContacts","useEffect","heading","list","map","el","Container","children","container","Heading","btn","to","Notification","notification","WelcomePage","p","RegisterForm","password","userData","setUserData","handleChange","segment","red","LoginForm","history","PrivateRaute","routeProps","PublicRoute","restricted","shouldRedirect","App","path","exact","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f3738b27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegisterForm_form__2XBFc\",\"segment\":\"RegisterForm_segment__3z0tI\",\"input\":\"RegisterForm_input__2O1H5\",\"label\":\"RegisterForm_label__250Xk\",\"red\":\"RegisterForm_red__3iRnT\",\"link\":\"RegisterForm_link__2e2je\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2Y2ZZ\",\"segment\":\"LoginForm_segment__3QaMi\",\"input\":\"LoginForm_input__2lE6j\",\"label\":\"LoginForm_label__2C4Gh\",\"red\":\"LoginForm_red__2uP4g\",\"link\":\"LoginForm_link__2bpeS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__RP-9Z\",\"lable\":\"ContactForm_lable__UIVMW\",\"input\":\"ContactForm_input__3F67c\",\"button\":\"ContactForm_button__1h-0h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"WelcomePage_heading__3gjgX\",\"p\":\"WelcomePage_p__32FHj\",\"a\":\"WelcomePage_a__AkFqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Heading_title__TLsTR\",\"heading\":\"Heading_heading__2-VDX\",\"btn\":\"Heading_btn__3HnOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__2i-yG\",\"button\":\"ContactItem_button__3wrKc\",\"number\":\"ContactItem_number__qJWd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2v-sz\",\"input\":\"Filter_input__XrOPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__RMVxy\",\"heading\":\"ContactList_heading__27XP2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1pfDO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__vvL0T\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('phonebook/getContactsRequest');\r\nexport const getContactsSuccess = createAction('phonebook/getContactsSuccess');\r\nexport const getContactsError = createAction('phonebook/getContactsError');\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest');\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\r\nexport const addContactError = createAction('phonebook/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n    'phonebook/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n    'phonebook/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\nexport const findContact = createAction('phonebook/filter');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport {\r\n    findContact,\r\n    getContactsSuccess,\r\n    getContactsRequest,\r\n    getContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n    [getContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) => [\r\n        ...state.filter(({ id }) => id !== payload),\r\n    ],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [findContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [getContactsRequest]: () => true,\r\n    [getContactsSuccess]: () => false,\r\n    [getContactsError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst onError = createReducer('', {\r\n    [getContactsError]: () => 'Something went wrong, try again later',\r\n    [getContactsRequest]: () => '',\r\n    [addContactError]: () => 'Something went wrong, try again later',\r\n    [addContactRequest]: () => '',\r\n    [deleteContactError]: () => 'Something went wrong, try again later',\r\n    [deleteContactRequest]: () => '',\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    isLoading,\r\n    onError,\r\n});\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { useHistory } from 'react-router';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset(token) {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nexport const register = createAsyncThunk(\r\n    'phonebook/signUp',\r\n    async (credentials, { rejectWithValue }) => {\r\n        try {\r\n            const { data } = await axios.post(`/users/signup`, credentials);\r\n            token.set(data.token);\r\n            return data;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\n\r\nexport const login = createAsyncThunk('phonebook/login', async credentials => {\r\n    try {\r\n        const { data } = await axios.post(`/users/login`, credentials);\r\n\r\n        token.set(data.token);\r\n        return data;\r\n    } catch (error) {\r\n        const history = useHistory();\r\n\r\n        history.push('/');\r\n\r\n        console.log(error.message);\r\n    }\r\n});\r\n\r\nexport const logout = createAsyncThunk('phonebook/logout', async () => {\r\n    try {\r\n        await axios.post(`/users/logout`);\r\n        token.unset();\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n});\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n    'phonebook/auth-refresh',\r\n    async (_, thunkAPI) => {\r\n        const state = thunkAPI.getState();\r\n        const persistedToken = state.auth.token;\r\n\r\n        if (persistedToken === null) {\r\n            console.log('Токена нет, уходим из fetchCurrentUser');\r\n            return thunkAPI.rejectWithValue();\r\n        }\r\n\r\n        token.set(persistedToken);\r\n        try {\r\n            const { data } = await axios.get('/users/current');\r\n            return data;\r\n        } catch (error) {\r\n            return thunkAPI.rejectWithValue(error.message);\r\n        }\r\n    },\r\n);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { register, login, logout, fetchCurrentUser } from './auth-operations';\r\n\r\nconst initialState = {\r\n    user: { name: null, email: null },\r\n    token: null,\r\n    isLoggedIn: false,\r\n    error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    extraReducers: {\r\n        [register.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [register.rejected](state, action) {\r\n            state.error = action.payload;\r\n        },\r\n        [register.pending](state, action) {\r\n            state.error = '';\r\n        },\r\n        [login.fulfilled](state, action) {\r\n            state.user = action.payload.user;\r\n            state.token = action.payload.token;\r\n            state.isLoggedIn = true;\r\n        },\r\n        [login.rejected](state, _) {\r\n            state.user = { user: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n            alert('Wrong username or password. Please try again');\r\n            console.log('error!');\r\n        },\r\n        [logout.fulfilled](state, _) {\r\n            state.user = { user: null, email: null };\r\n            state.token = null;\r\n            state.isLoggedIn = false;\r\n        },\r\n        [fetchCurrentUser.fulfilled](state, action) {\r\n            state.user = action.payload;\r\n            state.isLoggedIn = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport contactReducer from './phonebook-reducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport authReducer from './auth-slice';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import axios from 'axios';\r\nimport {\r\n    getContactsRequest,\r\n    getContactsSuccess,\r\n    getContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const getContacts = () => async dispatch => {\r\n    dispatch(getContactsRequest());\r\n\r\n    try {\r\n        const { data } = await axios.get('/contacts');\r\n\r\n        dispatch(getContactsSuccess(data));\r\n    } catch (error) {\r\n        dispatch(getContactsError(error.message));\r\n    }\r\n};\r\n\r\nexport const addContact = contact => dispatch => {\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nexport const deleteContactById = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n","export const getItems = state => state.contacts.items;\r\nexport const getAllContacts = state => state.contacts;\r\nexport const loadingGet = state => state.contacts.isLoading;\r\nexport const isLoggedInGet = state => state.auth.isLoggedIn;\r\nexport const getName = state => state.auth.user.name;\r\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/phonebook-operation';\nimport style from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { getItems } from 'redux/selectors';\n\nconst ContactForm = () => {\n    const [formData, setFormData] = useState({ name: '', number: '' });\n    const dispatch = useDispatch();\n    const contacts = useSelector(getItems);\n\n    const handelChange = e => {\n        const { name, value } = e.target;\n\n        setFormData(state => ({ ...state, [name]: value }));\n    };\n\n    const changeEnterName = name => {\n        const normalizeName = name.toLowerCase();\n\n        return contacts.find(\n            ({ name }) => normalizeName === name.toLowerCase(),\n        );\n    };\n\n    const handelSubmit = e => {\n        e.preventDefault();\n\n        if (changeEnterName(formData.name)) {\n            return alert(\n                `This contact \"${formData.name.toUpperCase()}\" has already been added to your Phonebook`,\n            );\n        }\n\n        dispatch(addContact(formData));\n\n        setFormData({ name: '', number: '' });\n    };\n\n    return (\n        <form onSubmit={handelSubmit} className={style.form}>\n            <label className={style.lable}>\n                Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handelChange}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    className={style.input}\n                    placeholder=\"Ivan Ivanov\"\n                />\n            </label>\n\n            <label className={style.lable}>\n                Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    value={formData.number}\n                    onChange={handelChange}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    className={style.input}\n                    placeholder=\"+7-999-99-99\"\n                />\n            </label>\n\n            <button type=\"submit\" className={style.button}>\n                Add contact\n            </button>\n        </form>\n    );\n};\nContactForm.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    handelChange: PropTypes.func,\n    handelSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findContact } from 'redux/phonebook-actions';\nimport style from './Filter.module.css';\n\nconst Filter = () => {\n    const value = useSelector(state => state.contacts.filter);\n    const dispatch = useDispatch();\n\n    const handelChange = e => dispatch(findContact(e.target.value));\n\n    return (\n        <label className={style.label}>\n            Find contacts by name\n            <input\n                placeholder=\"Search contact\"\n                type=\"text\"\n                value={value}\n                onChange={handelChange}\n                className={style.input}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactById } from 'redux/phonebook-operation';\nimport style from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <li key={id} className={style.item}>\n            <span>{name}</span>:<span className={style.number}>{number}</span>\n            <button\n                type=\"button\"\n                onClick={() => dispatch(deleteContactById(id))}\n                className={style.button}\n            >\n                Delete\n            </button>\n        </li>\n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport style from './ContactList.module.css';\nimport { getAllContacts, isLoggedInGet } from 'redux/selectors';\nimport { getContacts } from 'redux/phonebook-operation';\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n\n    const getUserContacts = (items, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        const findContacts = items.filter(item =>\n            item.name.toLowerCase().includes(normalizedFilter),\n        );\n\n        if (findContacts.length === 0) {\n            alert(`No contact ${normalizedFilter.toUpperCase()}`);\n        }\n        return findContacts;\n    };\n\n    const { items, filter } = useSelector(getAllContacts);\n    const isLoggedIn = useSelector(isLoggedInGet);\n    const contacts = getUserContacts(items, filter);\n\n    useEffect(() => {\n        if (isLoggedIn) dispatch(getContacts());\n    }, [dispatch, isLoggedIn]);\n\n    return (\n        <>\n            {isLoggedIn && items.length > 0 && (\n                <>\n                    <h2 className={style.heading}>Contacts</h2>\n                    <ul className={style.list}>\n                        {contacts.map(el => (\n                            <ContactItem\n                                key={el.id}\n                                name={el.name}\n                                number={el.number}\n                                id={el.id}\n                            />\n                        ))}\n                    </ul>\n                </>\n            )}\n        </>\n    );\n};\n\nContactItem.porpTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.string,\n};\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport style from './Container.module.css';\n\nconst Container = ({ children }) => (\n    <div className={style.container}>{children}</div>\n);\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport style from './Heading.module.css';\nimport { logout } from 'redux/auth-operations';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Heading = ({ title }) => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        try {\n            dispatch(logout());\n        } catch (error) {}\n    };\n    return (\n        <div className={style.heading}>\n            <h2 className={style.title}>{title}</h2>\n            <button type=\"submit\" onClick={handleSubmit} className={style.btn}>\n                <Link to=\"/\" className={style.btn}>\n                    Log out\n                </Link>\n            </button>\n        </div>\n    );\n};\n\nHeading.propTypes = { title: PropTypes.string.isRequired };\n\nexport default Heading;\n","import { notification } from './Notification.module.css';\r\n\r\nconst Notification = () => (\r\n    <p className={notification}>Enter your first contact</p>\r\n);\r\n\r\nexport default Notification;\r\n","import { Link } from 'react-router-dom';\r\nimport style from './WelcomePage.module.css';\r\n\r\nconst WelcomePage = () => {\r\n    return (\r\n        <>\r\n            <h2 className={style.heading}>Contacts App</h2>\r\n            <p className={style.p}>Hello Friend!</p>\r\n            <p className={style.p}>\r\n                If you have an account click here\r\n                <Link to=\"/login\" className={style.a}>\r\n                    Login\r\n                </Link>\r\n            </p>\r\n            <p className={style.p}>\r\n                If you don't have an account click here\r\n                <Link to=\"/register\" className={style.a}>\r\n                    Register\r\n                </Link>\r\n            </p>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WelcomePage;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\nimport { register } from '../../redux/auth-operations';\r\nimport style from './RegisterForm.module.css';\r\n\r\nconst RegisterForm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const initialState = { name: null, password: null, email: null };\r\n    const [userData, setUserData] = useState(initialState);\r\n\r\n    const handleChange = e => {\r\n        setUserData(state => ({ ...state, [e.target.name]: e.target.value }));\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        try {\r\n            dispatch(register(userData));\r\n            console.log(userData);\r\n            setUserData(initialState);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    };\r\n    return (\r\n        <form className={style.form} onSubmit={handleSubmit}>\r\n            <div className={style.segment}>\r\n                <h2>Registration</h2>\r\n            </div>\r\n            <label className={style.label}>\r\n                Name\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    placeholder=\"Ivanov Ivan\"\r\n                    className={style.input}\r\n                />\r\n            </label>\r\n\r\n            <label className={style.label}>\r\n                E-mail\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    placeholder=\"ivanov@me.com\"\r\n                    className={style.input}\r\n                />\r\n            </label>\r\n\r\n            <label className={style.label}>\r\n                Password\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"password\"\r\n                    required\r\n                    onChange={handleChange}\r\n                    placeholder=\"Password\"\r\n                    className={style.input}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={style.red}>\r\n                Register\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n// import { Link } from 'react-router-dom';\r\nimport { login } from '../../redux/auth-operations';\r\nimport style from './LoginForm.module.css';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst LoginForm = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const initialState = { email: null, password: null };\r\n    const [userData, setUserData] = useState(initialState);\r\n\r\n    const handleChange = e => {\r\n        setUserData(state => ({\r\n            ...state,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        try {\r\n            dispatch(login(userData));\r\n            history.push('/contacts');\r\n            setUserData(initialState);\r\n        } catch (error) {}\r\n    };\r\n    return (\r\n        <>\r\n            <form className={style.form} onSubmit={handleSubmit}>\r\n                <div className={style.segment}>\r\n                    <h2>Sign up</h2>\r\n                </div>\r\n                <label className={style.label}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        placeholder=\"Email Address\"\r\n                        className={style.input}\r\n                    />\r\n                </label>\r\n\r\n                <label className={style.label}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"password\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        placeholder=\"Password\"\r\n                        className={style.input}\r\n                    />\r\n                </label>\r\n                <button type=\"submit\" className={style.red}>\r\n                    Log in\r\n                </button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLoggedInGet } from 'redux/selectors';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function PrivateRaute({ children, ...routeProps }) {\r\n    const isLoggedIn = useSelector(isLoggedInGet);\r\n    const history = useHistory();\r\n\r\n    if (isLoggedIn) {\r\n        history.push('/contacts');\r\n    }\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggedIn ? children : <Redirect to=\"/\" />}\r\n        </Route>\r\n    );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLoggedInGet } from 'redux/selectors';\r\n\r\nexport default function PublicRoute({\r\n    children,\r\n    restricted = false,\r\n    ...routeProps\r\n}) {\r\n    const isLoggedIn = useSelector(isLoggedInGet);\r\n    const shouldRedirect = isLoggedIn && restricted;\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n            {shouldRedirect ? <Redirect to=\"/contacts\" /> : children}\r\n        </Route>\r\n    );\r\n}\r\n","import ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport Container from './Container';\nimport Heading from './Heading';\nimport Notification from './Notification';\nimport WelcomePage from './WelcomePage';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport PrivateRoute from './PrivateRoute/PrivateRoute';\nimport PublicRoute from './PublicRoute/PublicRoute';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts } from 'redux/phonebook-operation';\nimport { getItems, isLoggedInGet, getName, loadingGet } from 'redux/selectors';\nimport { fetchCurrentUser } from 'redux/auth-operations';\nimport { Switch } from 'react-router';\nimport { useHistory } from 'react-router';\n\nconst App = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getItems);\n    const name = useSelector(getName);\n    const isLoggedIn = useSelector(isLoggedInGet);\n    const history = useHistory();\n    // const isLoading = useSelector(loadingGet);\n\n    history.push('/');\n    useEffect(() => {\n        dispatch(fetchCurrentUser());\n        dispatch(getContacts());\n    }, [dispatch, isLoggedIn]);\n\n    return (\n        <Container>\n            {!isLoggedIn ? (\n                <Switch>\n                    <PublicRoute path=\"/\" exact>\n                        <WelcomePage />\n                    </PublicRoute>\n\n                    <PublicRoute path=\"/register\" restricted>\n                        <RegisterForm />\n                    </PublicRoute>\n\n                    <PublicRoute path=\"/login\" restricted>\n                        <LoginForm />\n                    </PublicRoute>\n\n                    <PrivateRoute path=\"/contacts\" />\n                </Switch>\n            ) : (\n                <>\n                    <PrivateRoute path=\"/contacts\">\n                        <Heading\n                            title={`Your phonebook, ${name.toUpperCase()}`}\n                        />\n                        <ContactForm />\n\n                        {contacts.length >= 2 && <Filter />}\n                        {contacts.length > 0 ? (\n                            <ContactList />\n                        ) : (\n                            <Notification />\n                        )}\n                    </PrivateRoute>\n                </>\n            )}\n        </Container>\n    );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport { store, persistor } from './redux/store.js';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}